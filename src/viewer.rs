/* automatically generated by rust-bindgen 0.57.0 */

pub const SDL_GRAPHICS_ERROR: u32 = 1;
pub const SDL_IMAGE_ERROR: u32 = 2;
pub const SDL_MIXER_ERROR: u32 = 3;
pub const SDL_TTF_ERROR: u32 = 4;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct Viewer {
    pub foo: ::std::os::raw::c_int,
}
#[test]
fn bindgen_test_layout_Viewer() {
    assert_eq!(
        ::std::mem::size_of::<Viewer>(),
        4usize,
        concat!("Size of: ", stringify!(Viewer))
    );
    assert_eq!(
        ::std::mem::align_of::<Viewer>(),
        4usize,
        concat!("Alignment of ", stringify!(Viewer))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Viewer>())).foo as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(Viewer),
            "::",
            stringify!(foo)
        )
    );
}
pub type Viewer_t = Viewer;
extern "C" {
    pub fn viewer_init(this: *mut Viewer_t) -> *mut Viewer_t;
}
extern "C" {
    pub fn viewer_show_frame(this: *mut Viewer_t);
}
extern "C" {
    pub fn viewer_release(this: *mut Viewer_t);
}
